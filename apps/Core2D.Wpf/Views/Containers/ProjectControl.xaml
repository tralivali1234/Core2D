<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.Wpf.Views.Containers.ProjectControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:local="clr-namespace:Core2D.Wpf" 
             xmlns:converters="clr-namespace:Core2D.Wpf.Converters" 
             xmlns:designer="clr-namespace:Core2D.Wpf.Designer"
             xmlns:Editor="clr-namespace:Core2D.Editor;assembly=Core2D.Editor"
             xmlns:custom="clr-namespace:Core2D.Wpf.Views.Custom"
             xmlns:project="clr-namespace:Core2D.Wpf.Views.Containers"
             mc:Ignorable="d" 
             d:DataContext="{x:Static designer:DesignerHelper.Project}"
             d:DesignWidth="250" d:DesignHeight="400">
    <Grid>
        <Grid.Resources>
            <ControlTemplate x:Key="ProjectMenu">
                <Menu Background="Transparent" HorizontalAlignment="Right">
                    <MenuItem Command="{x:Static Editor:ProjectEditorCommands.NewCommand}" CommandParameter="{Binding Path=SelectedItem, ElementName=projectTreeView}" Header="+"/>
                    <MenuItem Command="{x:Static Editor:ProjectEditorCommands.DeleteCommand}" CommandParameter="{Binding Path=SelectedItem, ElementName=projectTreeView}" Header="-"/>
                </Menu>
            </ControlTemplate>
            <ContextMenu x:Key="LayerContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="_Add Layer" InputGestureText="Ctrl+N" Command="{x:Static Editor:ProjectEditorCommands.AddLayerCommand}" CommandParameter="{Binding Owner}"/>
                <Separator/>
                <MenuItem Header="_Delete" InputGestureText="Del" Command="{x:Static Editor:ProjectEditorCommands.RemoveLayerCommand}" CommandParameter="{Binding}"/>
            </ContextMenu>
            <ContextMenu x:Key="PageContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="Te_mplate" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Templates}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="Command" Value="{x:Static Editor:ProjectEditorCommands.ApplyTemplateCommand}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                            <Setter Property="IsCheckable" Value="True"/>
                            <Setter Property="IsChecked" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                            <Binding Path="Tag.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="IsChecked" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Insert Page Bef_ore" InputGestureText="" Command="{x:Static Editor:ProjectEditorCommands.InsertPageBeforeCommand}" CommandParameter="{Binding}"/>
                <MenuItem Header="Insert Page Aft_er" InputGestureText="" Command="{x:Static Editor:ProjectEditorCommands.InsertPageAfterCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{x:Static Editor:ProjectEditorCommands.CutCommand}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{x:Static Editor:ProjectEditorCommands.CopyCommand}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{x:Static Editor:ProjectEditorCommands.PasteCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="_Delete" InputGestureText="Del" Command="{x:Static Editor:ProjectEditorCommands.DeleteCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{x:Static Editor:ProjectEditorCommands.ExportCommand}" CommandParameter="{Binding}"/>
            </ContextMenu>
            <ContextMenu x:Key="DocumentContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="_Add Page" InputGestureText="Ctrl+N" Command="{x:Static Editor:ProjectEditorCommands.AddPageCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="Insert Document Bef_ore" InputGestureText="" Command="{x:Static Editor:ProjectEditorCommands.InsertDocumentBeforeCommand}" CommandParameter="{Binding}"/>
                <MenuItem Header="Insert Document Aft_er" InputGestureText="" Command="{x:Static Editor:ProjectEditorCommands.InsertDocumentAfterCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{x:Static Editor:ProjectEditorCommands.CutCommand}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{x:Static Editor:ProjectEditorCommands.CopyCommand}" CommandParameter="{Binding}"/>
                <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{x:Static Editor:ProjectEditorCommands.PasteCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="_Delete" InputGestureText="Del" Command="{x:Static Editor:ProjectEditorCommands.DeleteCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{x:Static Editor:ProjectEditorCommands.ExportCommand}" CommandParameter="{Binding}"/>
            </ContextMenu>
            <ContextMenu x:Key="PojectContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                <MenuItem Header="_Add Document" InputGestureText="Ctrl+N" Command="{x:Static Editor:ProjectEditorCommands.AddDocumentCommand}" CommandParameter="{Binding}"/>
                <Separator/>
                <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{x:Static Editor:ProjectEditorCommands.ExportCommand}" CommandParameter="{Binding}"/>
            </ContextMenu>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" BorderBrush="{x:Null}" Margin="7,2,7,2" Grid.Row="0" Grid.Column="0" TextAlignment="Left" VerticalAlignment="Center"/>
        <Control Template="{StaticResource ProjectMenu}" Grid.Row="0" Grid.Column="1" Margin="2,0,2,0"/>
        <TreeView x:Name="projectTreeView" Tag="{Binding}" ItemsSource="{Binding Documents}" BorderBrush="{x:Null}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <TreeView.Resources>
                <Style x:Key="LayerTreeViewItemStyleKey" TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="False"/>
                    <Setter Property="ContextMenu" Value="{StaticResource LayerContextMenuKey}"/>
                    <EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
                    <Setter Property="IsSelected" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.CurrentContainer.CurrentLayer" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type TreeView}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsSelected" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="PageTreeViewItemStyleKey" TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="ContextMenu" Value="{StaticResource PageContextMenuKey}"/>
                    <EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
                    <Setter Property="IsSelected" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.CurrentContainer" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type TreeView}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsSelected" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{x:Static Editor:ProjectEditorCommands.SelectedItemChangedCommand}" CommandParameter="{Binding ElementName=projectTreeView, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TreeView.InputBindings>
                <KeyBinding Command="{x:Static Editor:ProjectEditorCommands.NewCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" Gesture="Ctrl+N"/>
                <KeyBinding Command="{x:Static Editor:ProjectEditorCommands.CutCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" Gesture="Ctrl+X"/>
                <KeyBinding Command="{x:Static Editor:ProjectEditorCommands.CopyCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" Gesture="Ctrl+C"/>
                <KeyBinding Command="{x:Static Editor:ProjectEditorCommands.PasteCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" Gesture="Ctrl+V"/>
                <KeyBinding Command="{x:Static Editor:ProjectEditorCommands.DeleteCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" Gesture="Del"/>
                <KeyBinding Command="{x:Static Editor:ProjectEditorCommands.ExportCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" Gesture="Ctrl+E"/>
            </TreeView.InputBindings>
            <TreeView.Style>
                <Style TargetType="TreeView">
                    <Setter Property="ContextMenu" Value="{StaticResource PojectContextMenuKey}"/>
                </Style>
            </TreeView.Style>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                    <Setter Property="ContextMenu" Value="{StaticResource DocumentContextMenuKey}"/>
                    <EventSetter Event="TreeViewItem.MouseRightButtonDown" Handler="TreeViewItem_MouseRightButtonDown"/>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Pages}" ItemContainerStyle="{StaticResource PageTreeViewItemStyleKey}">
                    <HierarchicalDataTemplate.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Layers}" ItemContainerStyle="{StaticResource LayerTreeViewItemStyleKey}">
                            <HierarchicalDataTemplate.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                                        <CheckBox IsChecked="{Binding IsVisible}" Margin="1"/>
                                        <TextBlock Text="{Binding Name}" FontWeight="Normal" Margin="1"/>
                                    </StackPanel>
                                </DataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                            <TextBlock Text="{Binding Name}" FontWeight="Normal" Margin="1"/>
                        </HierarchicalDataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                    <TextBlock Text="{Binding Name}" FontWeight="Normal" Margin="1"/>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="2">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=projectTreeView, Path=SelectedItem}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Selected" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
            <TextBox Text="{Binding ElementName=projectTreeView, Path=SelectedItem.Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" BorderBrush="{x:Null}" Margin="5,2,5,2" TextAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1"/>
        </Grid>
    </Grid>
</UserControl>
